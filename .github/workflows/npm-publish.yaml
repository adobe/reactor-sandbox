# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to publish to: latest | next'
        required: true
        default: 'latest'
  release:
    types: [created]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Check Tag Name
        if: ${{ github.event.inputs.tag != 'latest' && github.event.inputs.tag != 'next' }}
        run: |
          echo 'Only the tags "latest" or "next" are supported. You entered "${{ github.event.inputs.tag }}"'
          exit 1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/fermium'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install & Test
        run: |
          npm ci
          npm test
      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          token: ${{ secrets.ADOBE_BOT_NPM_TOKEN }}

  notify-slack:
    needs:
      - publish-npm
    if: ${{ github.event.inputs.tag == 'latest' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Find Latest Tag
        id: get-latest-release
        run: echo "repo-tag=$(git tag --sort=committerdate | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | tail -1)" >> "$GITHUB_OUTPUT"
      - name: Notify Slack of Release
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: 'A new version of ${{ github.event.repository.full_name }}[${{ steps.get-latest-release.outputs.repo-tag }}] has been released'
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Repo URL",
                    "value": "${{ github.event.repository.html_url }}"
                  },
                  {
                    "title": "See Releases",
                    "value": "${{ github.event.repository.html_url }}/releases"
                  }
                ]
              }
            ]
